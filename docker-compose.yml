version: '3.8'

services:
  riko-bot:
    build: .
    container_name: riko-discord-bot
    restart: unless-stopped
    
    # Environment variables
    environment:
      - PYTHONUNBUFFERED=1
      - PYTHONDONTWRITEBYTECODE=1
    
    # Mount the .env file for configuration
    env_file:
      - .env
    
    # Volumes for persistent data (optional)
    volumes:
      - ./logs:/app/logs  # For log files if you add logging to files
    
    # Resource limits
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'
    
    # Health check
    healthcheck:
      test: ["CMD", "python", "-c", "import psutil; [p for p in psutil.process_iter() if 'python' in p.name().lower() and 'bot.py' in ' '.join(p.cmdline())]"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    
    # Logging configuration
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

# Optional: Add a monitoring service
  # watchtower:
  #   image: containrrr/watchtower
  #   container_name: riko-watchtower
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock
  #   environment:
  #     - WATCHTOWER_CLEANUP=true
  #     - WATCHTOWER_POLL_INTERVAL=3600
  #   restart: unless-stopped

networks:
  default:
    name: riko-network 